name: Deployment 
on:
  push:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v4

      - name: Current directory test
        run: ls
        id: echo-param

      - name: Load & Cache Dependencies
        uses: ./.github/actions/Cache-deps
        with:
          caching: 'true'
          parameter: "ls"

      - name: Echo output
        run: echo "Parameter used: ${{ steps.echo-param.outputs.parameter }}"
      
      - name: Lint code
        run: npm run lint

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v4

      - name: Cache dependencies
        id: cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true' && steps.cache.outputs.cache-hit != ''
        run: npm ci

      - name: Test code
        id: run-tests
        run: npm run test

      - name: Upload test report
        if: failure() && steps.run-tests.outcome == 'failure'
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: test.json

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v4

      - name: Cache dependencies
        id: cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true' && steps.cache.outputs.cache-hit != ''
        run: npm ci

      - name: Build website
        run: npm run build

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-files
          path: dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-files
          path: ./dist

      - name: Output contents
        run: ls ./dist

      - name: Deploy site
        run: echo "Deploying..."
